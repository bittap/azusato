# jenkins use 8080
server:
  port: 8081
  tomcat:
    # tomcatが大きいサイズのリクエスト取り消さないようにする。
    # MultiPartアップロード時、容量超えをキャッチするため
    # https://stackoverflow.com/questions/2689989/how-to-handle-maxuploadsizeexceededexception
    max-swallow-size: -1
  servlet:
    session:
      cookie:
        same-site: LAX

# ===============================
# Spring
# ===============================
spring:
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
      # controllerの前でキャッチされないように
      # https://stackoverflow.com/questions/2689989/how-to-handle-maxuploadsizeexceededexception
      resolve-lazily: true
  h2:
    console.enabled: true
    console.path: /h2-console
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  flyway:
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    url: ${DATABASE_URL}
    # to make schema history table
    baseline-on-migrate: true
    # ignore order
    out-of-order: true
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
      # use strategy identity not table for auto
      use-new-id-generator-mappings: false
  web:
    resources:
      static-locations: classpath:/static, file:/project/azusato/resources
# ===============================
# DATABASE Log
# ===============================
logging:
  absolute-path: ${LOGGING_ABSOLUTE_PATH:/project/azusato/logs}
  file-name: ${LOGGING_FILE_NAME:log}
  level:
    root: DEBUG
    org:
      hibernate:
        # SQLクエリを出力するレベル。INFOにすると出力されない。
        SQL: DEBUG
        type:
          descriptor:
            # PrepareStateMentにバインドされる値を出力する。DEBUGにすると出力されない。
            # ex)..extract - extracted value ([update_i5_0_0_] : [VARCHAR]) - [system]
            sql: TRACE

      springframework:
        jdbc:
          core: TRACE
    # HikariPool ステータス出力はDEBUGなのでINFOにして出ないように
    com:
      zaxxer:
        hikari: DEBUG
user:
  # length of id for nonmember
  non-member-id-length: 30
  # max-age of cookie 10 years
  non-member-cookie-max-time: 315360000
  
celebration:
  # お祝いテーブルのコンテンツパスが保持されるサーバーのフォルダ位置
  server-content-folder-path: /project/azusato/celebration/content
  # 拡張子
  content-extention: txt
  # 表示ページ数
  pagesOfpage: 3
  # ページのリスト表示数
  pageOfElement: 5
  
celebration-notice:
  # ページのリスト表示数
  pageOfElement: 5
  
  
profile:
  # サーバーからするとの基本イメージの格納場所
  # 元々はサーバから「client-default-image-folder-path」にアクセスしよう思ったが、Jarの中ではフォルダにあるファイル取得が上手くいななくて別々に保存に変更
  server-default-image-folder-path: /project/azusato/resources/image/default/profile
  # クライアントからするとの基本イメージの格納場所
  client-default-image-folder-path: /image/default/profile
  # クライアントの本イメージのファイルの格納場所
  client-image-folder-path: /project/azusato/resources

session:
  # セッション維持時間
  max-interval-seconds: 3600 
  
rest:
  # RestAPIの基本パス。FullURIがない場合割り当てられる。
  default-uri: http://localhost:8081/

# クライアントに関する設定  
client:
  origin: https://azusato.com
  loading-modal-delay: 1000
  api-url: api
  # 表示ページ数
  page-pagesOfpage: 3
  # ページのリスト表示数
  page-pageOfElement: 5
  datetime-format-moment-js: YYYY-MM-DD
  datetime-format-thymeleaf: YYYY-MM-dd
  wedding-invitation-date: 2023-09-17
  
wedding:
  division-date: 2023-09-01
  
cookie:
  # 基本クッキーが反映されるパス
  path: /
  # クッキーを保持する期間「30日」 60*60*24*30
  cookie-max-time: 2592000
  #ログインページでID保存ボタン押下後、ログインした時のIDを保持するクッキーのネーム
  login-save-id-name: savedId
